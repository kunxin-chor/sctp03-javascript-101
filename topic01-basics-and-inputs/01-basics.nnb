{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# JavaScript\r\n* Typeless language\r\n* What are the values that JavaScript supports?"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// integers\r\n42\r\n// float\r\n3.14\r\n// strings -> textual data (meant for human being to read and understand)\r\n\"She sells seashell at the seashore\"\r\n'The quick brown fox jumps over the lazy dog'\r\n// booleans\r\ntrue\r\nfalse\r\n// 4 primitive (\"simple\") data types"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33mfalse\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "# Displaying the content of variables and storing data into variables\r\n* If a piece of data is not stored in a variable, it is forgotten"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// define a variable\r\nlet age = 42;  // assign the integer to the age variable\r\nconsole.log(age);\r\n\r\nlet myName = \"Paul\";\r\nconsole.log(myName); // -> console.log is a function.\r\n// A function is a pre-defined instruction that JavaScript understands.\r\n// When a function is always available, it is known as 'library'\r\n\r\nlet pi = 3.14;\r\nlet isRaining = true;\r\n\r\nconsole.log(pi);\r\nconsole.log(isRaining);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "42",
                                "Paul",
                                "3.14",
                                "true",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "# Operators\r\n* Operators are functions defined as symbols\r\n\r\n## The order of precedence:\r\n* Variables subsitution goes first\r\n* `( )`\r\n* `**, / * %, + -` - arthmeteric operators\r\n  * `%` - remainder (modolus)\r\n* `=` - assignment  "
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let cost = 0.55;\r\nlet numbers = 30;\r\n// assign total to be cost multipled by numbers\r\nlet total = cost * numbers;\r\nconsole.log(\"total =\", total);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "total = 16.5",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "* The memory is the source of truth for the variables\r\n* Imperative programming: one line of the code is executed at a time, and the CPU has no refernce to the code in the past, or the future. * All it has references to is the memory"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let a = 10;\r\nlet b = a;\r\nb = b + 1;\r\nconsole.log(a);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "10",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "`%` modulus - gives the remainder"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(5 % 3); // --> get 2 because 5 divided by 3 is remainder 2\r\nconsole.log(2 ** 3); // --> 2 to the power of 3"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "2",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "console.log(4 * 2 / 1); // same predence so we go from left to right\r\n// => console.log(8/1)\r\n// => console.log(8)\r\n\r\nconsole.log(2 * 4 **  4);\r\n// => console.log (2 * 256);\r\n// => console.log(512);\r\n\r\nconsole.log(1 + 3 * 2 - 1)\r\n// => console.log( 1 + 6 - 1)\r\n// => console.log(7 - 1);\r\n// => console.log(6)\r\n\r\nconsole.log( (2+2)* 3)\r\n// => console.log(4 * 3)\r\n// => console.log(12);\r\n\r\nlet gst = 0.9;\r\nconsole.log( 10 * gst + 3 * 2)\r\n// => console.log(10 * 0.9 + 3 * 2)\r\n// => console.log(9 + 3 * 2);\r\n// => console.log(9 + 6);\r\n// => console.log(15);\r\n\r\nlet z = 4 * 3 * gst + 10;\r\n// let z = 4 * 3 * 0.9 + 10;  the right hand side of the `=` must always be a value\r\n// let z = 12 * 0.9 + 10\r\n// let z = 10.8 + 10\r\n// let z = 20.8 \r\n"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// Math.min takes in 2 input values which are numbers (either float or integer)\r\n// --> aka Math.min recieves two parameters\r\n// The result of Math.min will the smallest of the input\r\n// --> aka the return value of Math.min is the smallest of all the parameters\r\n// --> aka Math.min returns the smallest parameter\r\n// To use a function, we must write the name function, followed by the parameters int \r\n// the brackets (aka. parenthesis)\r\n// --> call a function (specifically in this line, we 'call' the Math.min function)\r\n// \"Call the Math.min with two parameters and it will return the smaller one\"\r\nconsole.log(Math.min(3, 4))\r\n// => console.log(3)\r\n\r\n// the parameters of a function must be a value\r\n// (just like when you assign to a variable)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "3",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}